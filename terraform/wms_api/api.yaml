openapi: 3.0.2
info:
  title: ${name}
  description: WMS API
  version: 0.0.0
servers:
  - url: 'localhost'
    description: 'tester'
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
    validateRequestHeaders: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
    validateRequestHeaders: true
x-amazon-apigateway-binary-media-types:
  - image/png
  - image/jpeg
  - image/webp
paths:
  /layers:
    get:
      summary: Get Available Layers
      description: Returns a list of available layers
      tags:
        - Info
      responses:
        200:
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          content:
            application/json:
              $ref: '#/components/schemas/layers'
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${list_layers}/invocations
        httpMethod: POST
        credentials: ${credentials}
        responses:
          default:
            statusCode: 200
    options:
      summary: Enable CORS
      description: Enable CORS by returning the correct headers
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
      x-amazon-apigateway-integration:
        type: mock
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,access-control-allow-origin'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: |
                {}
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: |
            {"statusCode" : 200}
  /wms:
    get:
      summary: Web Map Service
      description: OGC compliant WMS feed
      tags:
        - Tile
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - name: VERSION
          description: WMS Version (1.3.0)
          in: query
          required: true
          schema:
            type: string
            example: 1.3.0
        - name: REQUEST
          description: WMS request type
          in: query
          required: true
          schema:
            type: string
            example: GetMap
        - name: LAYERS
          description: layer name
          in: query
          required: true
          schema:
            type: string
            example: layername
        - name: STYLES
          description: style name
          in: query
          required: true
          schema:
            type: string
            example: style
        - name: CRS
          description: Coordinate Reference System (CRS)
          in: query
          required: true
          schema:
            type: string
            example: epsg:4326
        - name: BBOX
          description: Boundingbox corners (minx,miny,maxx,maxy)
          in: query
          required: true
          schema:
            type: array
            items:
              type: number
            example: [0,0,0,0]
        - name: WIDTH
          description: Output image width
          in: query
          required: true
          schema:
            type: integer
            example: 256
        - name: HEIGHT
          description: Output image height
          in: query
          required: true
          schema:
            type: integer
            example: 256
        - name: FORMAT
          description: Output image format
          in: query
          required: true
          schema:
            type: string
            example: image/png
        - name: TRANSPARENT
          description: Background map transparency
          in: query
          required: false
          schema:
            type: boolean
            default: false
            example: false
        - name: BGCOLOR
          description: Background color
          in: query
          required: false
          schema:
            type: string
            default: "0xFFFFFF"
            example: "0xFFFFFF"
        - name: EXCEPTIONS
          description: exception format
          in: query
          required: false
          schema:
            type: string
            default: json
            example: json
        - name: TIME
          description: Time value of the layer
          in: query
          required: false
          schema:
            type: string
            example: "2019-11-01T01:15:07Z"
        - name: ELEVATION
          description: Elevation value of the layer
          in: query
          required: false
          schema:
            type: string
            example: "0"
      responses:
        200:
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          content:
            image/png:
              $ref: '#/components/schemas/binary'
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${cog_renderer}/invocations
        httpMethod: POST
        credentials: ${credentials}
        requestParameters:
          # TODO: maybe not needed?
          integration.request.header.Accept: method.request.querystring.FORMAT
        responses:
          default:
            statusCode: 200
    options:
      summary: Enable CORS
      description: Enable CORS by returning the correct headers
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
      x-amazon-apigateway-integration:
        type: mock
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,access-control-allow-origin'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: |
                {}
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: |
            {"statusCode" : 200}
components:
  schemas:
    binary:
      type: string
      format: binary
    layers:
      type: array
      items:
        type: string
